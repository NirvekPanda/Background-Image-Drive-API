// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: imageservice.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Location data structure
type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Address       string                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_imageservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Location) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Image metadata structure
type ImageMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Location      *Location              `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	DriveFileId   string                 `protobuf:"bytes,5,opt,name=drive_file_id,json=driveFileId,proto3" json:"drive_file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageMetadata) Reset() {
	*x = ImageMetadata{}
	mi := &file_imageservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMetadata) ProtoMessage() {}

func (x *ImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMetadata.ProtoReflect.Descriptor instead.
func (*ImageMetadata) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{1}
}

func (x *ImageMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ImageMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ImageMetadata) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ImageMetadata) GetDriveFileId() string {
	if x != nil {
		return x.DriveFileId
	}
	return ""
}

// Request messages
type GetCurrentImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentImageRequest) Reset() {
	*x = GetCurrentImageRequest{}
	mi := &file_imageservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentImageRequest) ProtoMessage() {}

func (x *GetCurrentImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentImageRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentImageRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{2}
}

type UploadImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Location      *Location              `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	ImageData     []byte                 `protobuf:"bytes,5,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	mi := &file_imageservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{3}
}

func (x *UploadImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadImageRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadImageRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UploadImageRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UploadImageRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

type GetImageCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageCountRequest) Reset() {
	*x = GetImageCountRequest{}
	mi := &file_imageservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageCountRequest) ProtoMessage() {}

func (x *GetImageCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageCountRequest.ProtoReflect.Descriptor instead.
func (*GetImageCountRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{4}
}

type GetImageByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageByIdRequest) Reset() {
	*x = GetImageByIdRequest{}
	mi := &file_imageservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageByIdRequest) ProtoMessage() {}

func (x *GetImageByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageByIdRequest.ProtoReflect.Descriptor instead.
func (*GetImageByIdRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{5}
}

func (x *GetImageByIdRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	mi := &file_imageservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

// Response messages
type GetCurrentImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      *ImageMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentImageResponse) Reset() {
	*x = GetCurrentImageResponse{}
	mi := &file_imageservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentImageResponse) ProtoMessage() {}

func (x *GetCurrentImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentImageResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentImageResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{7}
}

func (x *GetCurrentImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetCurrentImageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCurrentImageResponse) GetMetadata() *ImageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UploadImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      *ImageMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageResponse) Reset() {
	*x = UploadImageResponse{}
	mi := &file_imageservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageResponse) ProtoMessage() {}

func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.
func (*UploadImageResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{8}
}

func (x *UploadImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadImageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadImageResponse) GetMetadata() *ImageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetImageCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageCountResponse) Reset() {
	*x = GetImageCountResponse{}
	mi := &file_imageservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageCountResponse) ProtoMessage() {}

func (x *GetImageCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageCountResponse.ProtoReflect.Descriptor instead.
func (*GetImageCountResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{9}
}

func (x *GetImageCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetImageByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      *ImageMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageByIdResponse) Reset() {
	*x = GetImageByIdResponse{}
	mi := &file_imageservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageByIdResponse) ProtoMessage() {}

func (x *GetImageByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageByIdResponse.ProtoReflect.Descriptor instead.
func (*GetImageByIdResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{10}
}

func (x *GetImageByIdResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetImageByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetImageByIdResponse) GetMetadata() *ImageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	mi := &file_imageservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteImageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Location service messages
type GetLocationFromCoordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationFromCoordsRequest) Reset() {
	*x = GetLocationFromCoordsRequest{}
	mi := &file_imageservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationFromCoordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationFromCoordsRequest) ProtoMessage() {}

func (x *GetLocationFromCoordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationFromCoordsRequest.ProtoReflect.Descriptor instead.
func (*GetLocationFromCoordsRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{12}
}

func (x *GetLocationFromCoordsRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetLocationFromCoordsRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type GetLocationFromNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocationName  string                 `protobuf:"bytes,1,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationFromNameRequest) Reset() {
	*x = GetLocationFromNameRequest{}
	mi := &file_imageservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationFromNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationFromNameRequest) ProtoMessage() {}

func (x *GetLocationFromNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationFromNameRequest.ProtoReflect.Descriptor instead.
func (*GetLocationFromNameRequest) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{13}
}

func (x *GetLocationFromNameRequest) GetLocationName() string {
	if x != nil {
		return x.LocationName
	}
	return ""
}

type GetLocationFromCoordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Location      *Location              `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationFromCoordsResponse) Reset() {
	*x = GetLocationFromCoordsResponse{}
	mi := &file_imageservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationFromCoordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationFromCoordsResponse) ProtoMessage() {}

func (x *GetLocationFromCoordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationFromCoordsResponse.ProtoReflect.Descriptor instead.
func (*GetLocationFromCoordsResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{14}
}

func (x *GetLocationFromCoordsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetLocationFromCoordsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLocationFromCoordsResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type GetLocationFromNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Location      *Location              `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocationFromNameResponse) Reset() {
	*x = GetLocationFromNameResponse{}
	mi := &file_imageservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocationFromNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationFromNameResponse) ProtoMessage() {}

func (x *GetLocationFromNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationFromNameResponse.ProtoReflect.Descriptor instead.
func (*GetLocationFromNameResponse) Descriptor() ([]byte, []int) {
	return file_imageservice_proto_rawDescGZIP(), []int{15}
}

func (x *GetLocationFromNameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetLocationFromNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLocationFromNameResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

var File_imageservice_proto protoreflect.FileDescriptor

const file_imageservice_proto_rawDesc = "" +
	"\n" +
	"\x12imageservice.proto\x12\fimageservice\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x01\n" +
	"\bLocation\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\acountry\x18\x04 \x01(\tR\acountry\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x18\n" +
	"\aaddress\x18\x06 \x01(\tR\aaddress\"\xaf\x01\n" +
	"\rImageMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x122\n" +
	"\blocation\x18\x04 \x01(\v2\x16.imageservice.LocationR\blocation\x12\"\n" +
	"\rdrive_file_id\x18\x05 \x01(\tR\vdriveFileId\"\x18\n" +
	"\x16GetCurrentImageRequest\"\xaf\x01\n" +
	"\x12UploadImageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x122\n" +
	"\blocation\x18\x04 \x01(\v2\x16.imageservice.LocationR\blocation\x12\x1d\n" +
	"\n" +
	"image_data\x18\x05 \x01(\fR\timageData\"\x16\n" +
	"\x14GetImageCountRequest\"0\n" +
	"\x13GetImageByIdRequest\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"/\n" +
	"\x12DeleteImageRequest\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"\x86\x01\n" +
	"\x17GetCurrentImageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1b.imageservice.ImageMetadataR\bmetadata\"\x82\x01\n" +
	"\x13UploadImageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1b.imageservice.ImageMetadataR\bmetadata\"-\n" +
	"\x15GetImageCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"\x83\x01\n" +
	"\x14GetImageByIdResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1b.imageservice.ImageMetadataR\bmetadata\"I\n" +
	"\x13DeleteImageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"X\n" +
	"\x1cGetLocationFromCoordsRequest\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\"A\n" +
	"\x1aGetLocationFromNameRequest\x12#\n" +
	"\rlocation_name\x18\x01 \x01(\tR\flocationName\"\x87\x01\n" +
	"\x1dGetLocationFromCoordsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x122\n" +
	"\blocation\x18\x03 \x01(\v2\x16.imageservice.LocationR\blocation\"\x85\x01\n" +
	"\x1bGetLocationFromNameResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x122\n" +
	"\blocation\x18\x03 \x01(\v2\x16.imageservice.LocationR\blocation2\xc7\x03\n" +
	"\fImageService\x12^\n" +
	"\x0fGetCurrentImage\x12$.imageservice.GetCurrentImageRequest\x1a%.imageservice.GetCurrentImageResponse\x12R\n" +
	"\vUploadImage\x12 .imageservice.UploadImageRequest\x1a!.imageservice.UploadImageResponse\x12X\n" +
	"\rGetImageCount\x12\".imageservice.GetImageCountRequest\x1a#.imageservice.GetImageCountResponse\x12U\n" +
	"\fGetImageById\x12!.imageservice.GetImageByIdRequest\x1a\".imageservice.GetImageByIdResponse\x12R\n" +
	"\vDeleteImage\x12 .imageservice.DeleteImageRequest\x1a!.imageservice.DeleteImageResponse2\xef\x01\n" +
	"\x0fLocationService\x12p\n" +
	"\x15GetLocationFromCoords\x12*.imageservice.GetLocationFromCoordsRequest\x1a+.imageservice.GetLocationFromCoordsResponse\x12j\n" +
	"\x13GetLocationFromName\x12(.imageservice.GetLocationFromNameRequest\x1a).imageservice.GetLocationFromNameResponseBAZ?https://github.com/NirvekPanda/Background-Image-Drive-API/protob\x06proto3"

var (
	file_imageservice_proto_rawDescOnce sync.Once
	file_imageservice_proto_rawDescData []byte
)

func file_imageservice_proto_rawDescGZIP() []byte {
	file_imageservice_proto_rawDescOnce.Do(func() {
		file_imageservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_imageservice_proto_rawDesc), len(file_imageservice_proto_rawDesc)))
	})
	return file_imageservice_proto_rawDescData
}

var file_imageservice_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_imageservice_proto_goTypes = []any{
	(*Location)(nil),                      // 0: imageservice.Location
	(*ImageMetadata)(nil),                 // 1: imageservice.ImageMetadata
	(*GetCurrentImageRequest)(nil),        // 2: imageservice.GetCurrentImageRequest
	(*UploadImageRequest)(nil),            // 3: imageservice.UploadImageRequest
	(*GetImageCountRequest)(nil),          // 4: imageservice.GetImageCountRequest
	(*GetImageByIdRequest)(nil),           // 5: imageservice.GetImageByIdRequest
	(*DeleteImageRequest)(nil),            // 6: imageservice.DeleteImageRequest
	(*GetCurrentImageResponse)(nil),       // 7: imageservice.GetCurrentImageResponse
	(*UploadImageResponse)(nil),           // 8: imageservice.UploadImageResponse
	(*GetImageCountResponse)(nil),         // 9: imageservice.GetImageCountResponse
	(*GetImageByIdResponse)(nil),          // 10: imageservice.GetImageByIdResponse
	(*DeleteImageResponse)(nil),           // 11: imageservice.DeleteImageResponse
	(*GetLocationFromCoordsRequest)(nil),  // 12: imageservice.GetLocationFromCoordsRequest
	(*GetLocationFromNameRequest)(nil),    // 13: imageservice.GetLocationFromNameRequest
	(*GetLocationFromCoordsResponse)(nil), // 14: imageservice.GetLocationFromCoordsResponse
	(*GetLocationFromNameResponse)(nil),   // 15: imageservice.GetLocationFromNameResponse
}
var file_imageservice_proto_depIdxs = []int32{
	0,  // 0: imageservice.ImageMetadata.location:type_name -> imageservice.Location
	0,  // 1: imageservice.UploadImageRequest.location:type_name -> imageservice.Location
	1,  // 2: imageservice.GetCurrentImageResponse.metadata:type_name -> imageservice.ImageMetadata
	1,  // 3: imageservice.UploadImageResponse.metadata:type_name -> imageservice.ImageMetadata
	1,  // 4: imageservice.GetImageByIdResponse.metadata:type_name -> imageservice.ImageMetadata
	0,  // 5: imageservice.GetLocationFromCoordsResponse.location:type_name -> imageservice.Location
	0,  // 6: imageservice.GetLocationFromNameResponse.location:type_name -> imageservice.Location
	2,  // 7: imageservice.ImageService.GetCurrentImage:input_type -> imageservice.GetCurrentImageRequest
	3,  // 8: imageservice.ImageService.UploadImage:input_type -> imageservice.UploadImageRequest
	4,  // 9: imageservice.ImageService.GetImageCount:input_type -> imageservice.GetImageCountRequest
	5,  // 10: imageservice.ImageService.GetImageById:input_type -> imageservice.GetImageByIdRequest
	6,  // 11: imageservice.ImageService.DeleteImage:input_type -> imageservice.DeleteImageRequest
	12, // 12: imageservice.LocationService.GetLocationFromCoords:input_type -> imageservice.GetLocationFromCoordsRequest
	13, // 13: imageservice.LocationService.GetLocationFromName:input_type -> imageservice.GetLocationFromNameRequest
	7,  // 14: imageservice.ImageService.GetCurrentImage:output_type -> imageservice.GetCurrentImageResponse
	8,  // 15: imageservice.ImageService.UploadImage:output_type -> imageservice.UploadImageResponse
	9,  // 16: imageservice.ImageService.GetImageCount:output_type -> imageservice.GetImageCountResponse
	10, // 17: imageservice.ImageService.GetImageById:output_type -> imageservice.GetImageByIdResponse
	11, // 18: imageservice.ImageService.DeleteImage:output_type -> imageservice.DeleteImageResponse
	14, // 19: imageservice.LocationService.GetLocationFromCoords:output_type -> imageservice.GetLocationFromCoordsResponse
	15, // 20: imageservice.LocationService.GetLocationFromName:output_type -> imageservice.GetLocationFromNameResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_imageservice_proto_init() }
func file_imageservice_proto_init() {
	if File_imageservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_imageservice_proto_rawDesc), len(file_imageservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_imageservice_proto_goTypes,
		DependencyIndexes: file_imageservice_proto_depIdxs,
		MessageInfos:      file_imageservice_proto_msgTypes,
	}.Build()
	File_imageservice_proto = out.File
	file_imageservice_proto_goTypes = nil
	file_imageservice_proto_depIdxs = nil
}
